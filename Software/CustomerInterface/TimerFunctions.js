/*TimeSinceBoot*/const TimeSinceBootFunction =
     `\n`
     +
     `//*************** Time Since Boot Function: *************** this section of the code is generated by index.html using TimerFunctions.js ***************`
     +
     `\n \n \t`
     +
     `//Find the time since the Low Voltage Disconnect was turned on`
     +
     `\n \t`
     +
     `unsigned long TimeSinceBoot()`
     +
     `\n \t`
     +
     `{`
     +
     `\n \t \t`
     +
     `unsigned long SystemTime = millis()+TimerOffset; // TimerOffset allows manipulating timers for testing purposes (you can start the timer at a much later time than the actual time since starting)`
     +
     `\n \t \t`
     +
     `return(SystemTime);`
     +
     `\n \t`
     +
     `} //end of TimeSinceBoot() function`
     +
     `\n`
     ;

/*Start Buffer Timer Function*/
                 const DisconnectBufferTimerEnd =
     `\n`
     +
     `//*************** Disconnect Buffer Timer End: *************** this section of the code is generated by index.html using TimerFunctions.js ***************`
     +
     `\n \n \t`
     +
     `unsigned long DisconnectBufferTimerEnd()`
     +
     `\n \t`
     +
     `{`
     +
     `\n \t \t`
     +
     `unsigned long ShutOffTime;`
     +
     `\n \t \t`
     +
     `if(TimeSinceBoot()>=RolloverTime-DisconnectBufferTime)`
     +
     `\n \t \t`
     +
     `{`
     +
     `\n \t \t \t`
     +
     `ShutOffTime = (TimeSinceBoot()+DisconnectBufferTime)-RolloverTime;`
     +
     `\n \t \t`
     +
     `} //end of if statement`
     +
     `\n \t \t`
     +
     `else // "normal operation", when TimeSinceBoot() is not within the Disconnect Buffer Time's duration of the millis() rollover`
     +
     `\n \t \t`
     +
     `{`
     +
     `\n \t \t \t`
     +    
     `ShutOffTime = TimeSinceBoot()+DisconnectBufferTime;       //E.g Current Time + 30 seconds`
     +
     `\n \t \t`
     +
     `} //end of else statement`
     +
     `\n \t \t`
     +  
     `return(ShutOffTime);`
     +
     `\n \t`
     +
     `} //end of 'SetTimerEnd() function'`
     +
     `\n`
     ;

     /*Start Buffer Timer Function*/
     const OverrideTimerEnd =
     `\n`
     +
     `//*************** Override Timer End: *************** this section of the code is generated by index.html using TimerFunctions.js ***************`
     +
     `\n \n \t`
     +
     `unsigned long OverrideTimerEnd()`
     +
     `\n \t`
     +
     `{`
     +
     `\n \t \t`
     +
     `unsigned long OverrideEnd;`
     +
     `\n \t \t`
     +
     `if(TimeSinceBoot()>=RolloverTime-OverrideDelay)`
     +
     `\n \t \t`
     +
     `{`
     +
     `\n \t \t \t`
     + 
     ` OverrideEnd = (TimeSinceBoot()+OverrideDelay)-RolloverTime;`
     +
     `\n \t \t`
     +
     `} //end of if statement`
     +
     `\n \t \t`
     +
     `else // "normal operation", when TimeSinceBoot() is not within the Disconnect Buffer Time's duration of the millis() rollover`
     +
     `\n \t \t`
     +
     `{`
     +
     `\n \t \t \t`
     +
     `OverrideEnd = TimeSinceBoot()+ OverrideDelay;       //E.g Current Time + 30 seconds`
     +
     `\n \t \t`
     +
     `} //end of else statement`
     +
     `\n \t \t`
     +  
     `return(OverrideEnd);`
     +
     `\n \t`
     +
     `} //end of 'SetTimerEnd() function'`
     +
     `\n`
     ;