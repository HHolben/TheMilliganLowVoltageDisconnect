                  /*Void Loop*/const LoopFunction =
                  `\n`
                  +
                  `//*************** Void Loop Function Begining *************** this section of the code is generated by index.html using VoidLoop.js ***************`
                  +
                  `\n \n \t`
                  +
                  `void loop()`
                  +
                  `\n \t`
                  +
                  `{`
                  +
                  `\n \t \t`
                  +
                  `//Initalization of Variables`
                  +
                  `\n \t \t`
                  +
                  `int OverrideSelectState = digitalRead(OverrideDelayButton);`
                  +
                  `\n \t \t`
                  +
                  `int lastSwitchState;`
 	                +
                  `\n \t \t`
                  +
                  `int EncoderSelectState = digitalRead(EncoderSW);`
                  +
                  `\n \t \t`
 	                +
                  `int SELECT_State = digitalRead(InputSelect);`
                  +
                  `\n \t \t`
                  +
                  `if (EncoderSelectState == LOW && lastEncoderSelectState == HIGH || SELECT_State == LOW)`
                  +
                  `\n \t \t`
                  +
                  `{`  
                  +
                  `\n \t \t \t`
                  +
                  `// Update the switch state`
                  +
                  `\n \t \t \t`
                  +
                  `selectPressed = !selectPressed;` 
                  +
                  `\n \t \t \t`
                  +
                  `// Toggle the latched state`
                  +
                  `\n \t \t`
                  +
                  `} //end if (EncoderSelectState == LOW && lastEncoderSelectState == HIGH || SELECT_State == LOW))`
                  +
                  `\n \t \t`
                  +
                  `// Update the last state`
                  +
                  `\n \t \t`
                  +
                  `lastEncoderSelectState = EncoderSelectState;`
                  +
                  `\n \t \t`
                  + 
              	  `// Check if the encoder button is pressed`
                  +
                  `\n \t \t`
                  +
                  `if (selectPressed)`
                  +
                  `\n \t \t`
                  +
                  `{`
                  +
                  `\n \t \t \t`
                  +
                  `if (currentPage==STATUS_PAGE && lastEncoderSelectState == LOW || (currentPage==STATUS_PAGE && SELECT_State == LOW))`
                  +
                  `\n \t \t \t`
                  +
                  `{`
                  +
                  `\n \t \t \t \t`
                  +
                  `currentPage = MENU_PAGE;`
                  +
                  `\n \t \t \t \t`
                  +
                  `currentState = SCROLLING;`
                  +
                  `\n \t \t \t`
                  +
                  `} // end if (currentPage==STATUS_PAGE && lastEncoderSelectState == LOW || (currentPage==STATUS_PAGE && SELECT_State == LOW))`
                  +
                  `\n \t \t`
                  +
                  `} // end if (selectPressed)`
                  +
                  `\n \t \t`
                  +
                  `else if (currentPage == MENU_PAGE && scrollPosition == 0)`    
                  +
                  `\n \t \t`
                  +
                  `{`
                  +
                  `\n \t \t \t`
                  +
                  `if (!selectPressed)`
                  +
                  `\n \t \t \t`
                  +
                  `{`
                  +
                  `\n \t \t \t \t`
                  +
                  `currentPage = NOMINAL_VOLTAGE_PAGE;` 
                  +
                  `\n \t \t \t \t`
                  +
                  `currentState = SELECTING;`
                  +
                  `\n \t \t \t \t`
                  +
                  `SelectedPage = 0;`
                  +
                  `\n \t \t \t`
                  +
                  `} // end if (!selectPressed)`
                  +
                  `\n \t \t`
                  +
                  `} //end else if (currentPage == MENU_PAGE && scrollPosition == 0)`
                  +
                  `\n \t \t`
                  +
                  `else if (currentPage == MENU_PAGE && scrollPosition == 1)`
                  +
                  `\n \t \t`    
                  +
                  `{`
                  +
                  `\n \t \t \t`
                  +
                  `if (!selectPressed)`
                  +
                  `\n \t \t \t`
                  +
                  `{`
                  +
                  `\n \t \t \t \t`
                  +
                  `currentPage = CUT_OFF_VOLTAGE_PAGE;` 
                  +
                  `\n \t \t \t \t`
                  +
                  `currentState = SELECTING;`
                  +
                  `\n \t \t \t \t`
                  +
                  `SelectedPage = 1;`
                  +
                  `\n \t \t \t`
                  +
                  `} // end if (!selectPressed)`
                  +
                  `\n \t \t`
                  +
                  `} // end else if (currentPage == MENU_PAGE && scrollPosition == 1)`
                  +
                  `\n \t \t`
                  +
                  `else if (currentPage == MENU_PAGE && scrollPosition == 2)`
                  +
                  `\n \t \t`
                  +
                  `{`                 
                  +
                  `\n \t \t \t`
                  +
                  `if (!selectPressed)`
                  +
                  `\n \t \t \t`
                  +
                  `{`
                  +
                  `\n \t \t \t \t`
                  +
                  `currentPage = RECONNECT_VOLTAGE_PAGE;` 
                  +
                  `\n \t \t \t \t`
                  +
                  `currentState = SELECTING;`
                  +
                  `\n \t \t \t \t`
                  +                  
                  `SelectedPage = 2;`
                  +
                  `\n \t \t \t`
                  +
                  `} //end if (!selectPressed)`
                  +
                  `\n \t \t`
                  +
                  `} // end else if (currentPage == MENU_PAGE && scrollPosition == 2)`
                  +
                  `\n \t \t`
                  +
                  `else if (currentPage == MENU_PAGE && scrollPosition == 3)`
                  +
                  `\n \t \t`
                  +
                  `{`
                  +
                  `\n \t \t \t`
                  +
                  `if (!selectPressed)`
                  +
                  `\n \t \t \t`
                  +
                  `{`
                  +
                  `\n \t \t \t \t`
                  +
                  `currentPage = OVERRIDE_TIME_PAGE;`
                  +
                  `\n \t \t \t \t`
                  +
                  `currentState = SELECTING;`
                  +
                  `\n \t \t \t \t`
                  +
                  `SelectedPage = 3;`
                  +
                  `\n \t \t \t`
                  +
                  `} //if (!selectPressed)`
                  +
                  `\n \t \t`
                  +
                  `}// else if`
                  +
                  `\n \t \t`
                  +
                  `else if( currentPage == NOMINAL_VOLTAGE_PAGE || currentPage == CUT_OFF_VOLTAGE_PAGE || currentPage == RECONNECT_VOLTAGE_PAGE || currentPage == OVERRIDE_TIME_PAGE)`
                  +
                  `\n \t \t`
                  +
                  `{`
                  +
                  `\n \t \t \t`
                  +
                  `ReturnToStatusPage = true;`
                  +
                  `\n \t \t`
                  +
                  `} //end else if`
                  +
                  `\n \t \t`
                  +
                  `if(selectPressed && ReturnToStatusPage == true)`
                  +
                  `\n \t \t`
                  +
                  `{`
                  +
                  `\n \t \t \t`
                  +
                  `currentPage = STATUS_PAGE;`
                  +
                  `\n \t \t \t`
                  +
                  `currentState = SCROLLING;`
                  +
                  `\n \t \t \t`
                  +
                  `EncoderSelectState = HIGH;`
                  +  
                  `\n \t \t \t`
                  +
                  `ReturnToStatusPage = false;`
                  + 
                  `\n \t \t`
                  +
                  `} //end if`
                  +
                  `\n \t \t`
                  +
                  `switch (currentPage)`
                  +
                  `\n \t \t`
                  +
                  `{case STATUS_PAGE:`
                  +
                  `\n \t \t`
                  +
                  `StatusPageScreen();`
                  +
                  `\n \t \t`
                  +
                  `break;`
                  +
                  `\n \t \t`
                  +
                  `case MENU_PAGE:`
                  +
                  `\n \t \t`
                  +
                  `MenuPageScreens(scrollPosition);`
                  +
                  `\n \t \t`
                  +
                  `break;`
                  +
                  `\n \t \t`
                  +
                  `case NOMINAL_VOLTAGE_PAGE:`
                  +
                  `\n \t`
                  +
                  `AdjustNominalVoltage();`
                  +
                  `\n \t \t`
                  +
                  `break;`
                  +
                  `\n \t \t`
                  +
                  `case CUT_OFF_VOLTAGE_PAGE:`
                  +
                  `\n \t \t`
                  +
                  `AdjustCutOffVoltagePage();`
                  +
                  `\n \t \t`
                  +
                  `break;`
                  +
                  `\n \t \t`
                  +
                  `case RECONNECT_VOLTAGE_PAGE:`
                  +
                  `\n \t \t`
                  +
                  `AdjustReconnectVoltagePage();`
                  +
                  `\n \t \t`
                  +
                  `break;`
                  +
                  `\n \t \t`
                  +
                  `case OVERRIDE_TIME_PAGE:`
                  +
                  `\n \t \t`
                  +
                  `AdjustOverrideTimePage();`
                  +
                  `\n \t \t`
                  +
                  `break;`
                  +
                  `\n \t \t`
                  +
                  `} // end of case STATUS_PAGE`
                  +
                  `\n \t`
                  +
                  LowVoltageCheck
                  +
                  ReconnectVoltageCheck
                  +
                  `\n \t`
                  +
                  `//*************** Void Loop Function End *************** this section of the code is generated by index.html using VoidLoop.js ***************`
                  +
                  `\n \t` 
                  +
                  `} //End of Void Loop`
                  +
                  `\n`
                  ;//end of arduinoCode constant
